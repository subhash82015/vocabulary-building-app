// Generated by view binder compiler. Do not edit!
package com.app.vocabulary.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.app.vocabulary.R;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class UserListItemsBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final CircleImageView civProduct;

  @NonNull
  public final ImageView ivDelete;

  @NonNull
  public final LinearLayout llNotificationItemLayout;

  @NonNull
  public final TextView tvCourseDetails;

  @NonNull
  public final TextView tvMobile;

  @NonNull
  public final TextView tvName;

  @NonNull
  public final TextView tvUserType;

  private UserListItemsBinding(@NonNull CardView rootView, @NonNull CircleImageView civProduct,
      @NonNull ImageView ivDelete, @NonNull LinearLayout llNotificationItemLayout,
      @NonNull TextView tvCourseDetails, @NonNull TextView tvMobile, @NonNull TextView tvName,
      @NonNull TextView tvUserType) {
    this.rootView = rootView;
    this.civProduct = civProduct;
    this.ivDelete = ivDelete;
    this.llNotificationItemLayout = llNotificationItemLayout;
    this.tvCourseDetails = tvCourseDetails;
    this.tvMobile = tvMobile;
    this.tvName = tvName;
    this.tvUserType = tvUserType;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static UserListItemsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static UserListItemsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.user_list_items, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static UserListItemsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.civProduct;
      CircleImageView civProduct = ViewBindings.findChildViewById(rootView, id);
      if (civProduct == null) {
        break missingId;
      }

      id = R.id.ivDelete;
      ImageView ivDelete = ViewBindings.findChildViewById(rootView, id);
      if (ivDelete == null) {
        break missingId;
      }

      id = R.id.llNotificationItemLayout;
      LinearLayout llNotificationItemLayout = ViewBindings.findChildViewById(rootView, id);
      if (llNotificationItemLayout == null) {
        break missingId;
      }

      id = R.id.tvCourseDetails;
      TextView tvCourseDetails = ViewBindings.findChildViewById(rootView, id);
      if (tvCourseDetails == null) {
        break missingId;
      }

      id = R.id.tvMobile;
      TextView tvMobile = ViewBindings.findChildViewById(rootView, id);
      if (tvMobile == null) {
        break missingId;
      }

      id = R.id.tvName;
      TextView tvName = ViewBindings.findChildViewById(rootView, id);
      if (tvName == null) {
        break missingId;
      }

      id = R.id.tvUserType;
      TextView tvUserType = ViewBindings.findChildViewById(rootView, id);
      if (tvUserType == null) {
        break missingId;
      }

      return new UserListItemsBinding((CardView) rootView, civProduct, ivDelete,
          llNotificationItemLayout, tvCourseDetails, tvMobile, tvName, tvUserType);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
