// Generated by view binder compiler. Do not edit!
package com.app.vocabulary.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.appcompat.widget.AppCompatEditText;
import androidx.appcompat.widget.LinearLayoutCompat;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.app.vocabulary.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAddVocabularyBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final AppCompatButton btnAdd;

  @NonNull
  public final AppCompatEditText etAntonyms;

  @NonNull
  public final AppCompatEditText etData;

  @NonNull
  public final AppCompatEditText etDescription;

  @NonNull
  public final AppCompatEditText etSynonyms;

  @NonNull
  public final AppCompatEditText etVocabulary;

  @NonNull
  public final LinearLayoutCompat llFeesAmount;

  private ActivityAddVocabularyBinding(@NonNull LinearLayout rootView,
      @NonNull AppCompatButton btnAdd, @NonNull AppCompatEditText etAntonyms,
      @NonNull AppCompatEditText etData, @NonNull AppCompatEditText etDescription,
      @NonNull AppCompatEditText etSynonyms, @NonNull AppCompatEditText etVocabulary,
      @NonNull LinearLayoutCompat llFeesAmount) {
    this.rootView = rootView;
    this.btnAdd = btnAdd;
    this.etAntonyms = etAntonyms;
    this.etData = etData;
    this.etDescription = etDescription;
    this.etSynonyms = etSynonyms;
    this.etVocabulary = etVocabulary;
    this.llFeesAmount = llFeesAmount;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAddVocabularyBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAddVocabularyBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_add_vocabulary, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAddVocabularyBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnAdd;
      AppCompatButton btnAdd = ViewBindings.findChildViewById(rootView, id);
      if (btnAdd == null) {
        break missingId;
      }

      id = R.id.etAntonyms;
      AppCompatEditText etAntonyms = ViewBindings.findChildViewById(rootView, id);
      if (etAntonyms == null) {
        break missingId;
      }

      id = R.id.etData;
      AppCompatEditText etData = ViewBindings.findChildViewById(rootView, id);
      if (etData == null) {
        break missingId;
      }

      id = R.id.etDescription;
      AppCompatEditText etDescription = ViewBindings.findChildViewById(rootView, id);
      if (etDescription == null) {
        break missingId;
      }

      id = R.id.etSynonyms;
      AppCompatEditText etSynonyms = ViewBindings.findChildViewById(rootView, id);
      if (etSynonyms == null) {
        break missingId;
      }

      id = R.id.etVocabulary;
      AppCompatEditText etVocabulary = ViewBindings.findChildViewById(rootView, id);
      if (etVocabulary == null) {
        break missingId;
      }

      id = R.id.llFeesAmount;
      LinearLayoutCompat llFeesAmount = ViewBindings.findChildViewById(rootView, id);
      if (llFeesAmount == null) {
        break missingId;
      }

      return new ActivityAddVocabularyBinding((LinearLayout) rootView, btnAdd, etAntonyms, etData,
          etDescription, etSynonyms, etVocabulary, llFeesAmount);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
